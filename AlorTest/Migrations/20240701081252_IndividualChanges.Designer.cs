// <auto-generated />
using System;
using AlorTest.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlorTest.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20240701081252_IndividualChanges")]
    partial class IndividualChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlorTest.Repository.DBModels.DownloadedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FileType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Files__3213E83F9A72F920");

                    b.ToTable("DownloadedFiles");
                });

            modelBuilder.Entity("AlorTest.Repository.DBModels.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOriginalScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortKeyLastMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnListType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VersionNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("AlorTest.Repository.DBModels.Individual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FourthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOriginalScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortKeyLastMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnListType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VersionNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Individuals");
                });
#pragma warning restore 612, 618
        }
    }
}
